<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU

SUPPORT = ENV['TM_SUPPORT_PATH']
DIALOG = SUPPORT + '/bin/tm_dialog'

require 'net/http'

require SUPPORT + '/lib/escape'

require ENV['TM_SUPPORT_PATH'] + '/lib/ui'
require ENV['TM_SUPPORT_PATH'] + '/lib/exit_codes'

class String
  def nbsp
    gsub(' ', '&amp;nbsp;')
  end
end

def show_function_and_exit(function, line = nil)
  return unless function =~ /^[A-Za-z_][A-Za-z0-9_]*$/
  result = Net::HTTP.get(URI.parse( 'http://localhost:8899/function-info.vsp?func=' + function.to_s )).strip
  if result.length &gt; 30 # below that, it is most probably the "not found" message
    TextMate::UI.tool_tip( result, {:format =&gt; :html, :transparent =&gt; false})
    exit
  end
end

function = nil

show_function_and_exit(function = ENV['TM_CURRENT_WORD'].to_s)

prefix = ENV['TM_CURRENT_LINE'][0..ENV['TM_LINE_INDEX'].to_i].reverse

# Keep moving back a function call until we get a match and exit
while prefix =~ /\(\s*(\w+)/
  show_function_and_exit(function = $1.reverse, ENV['TM_CURRENT_LINE'][($' + $&amp;).length..ENV['TM_LINE_INDEX'].to_i - 1])
  prefix = prefix[$&amp;.length..-1]
end

show_function_and_exit(function = $1) while ENV['TM_CURRENT_LINE'][0..ENV['TM_LINE_INDEX'].to_i] =~ /(\w+)\($/

TextMate.exit_show_tool_tip "Function not found: " + function.to_s
</string>
	<key>fallbackInput</key>
	<string>line</string>
	<key>input</key>
	<string>none</string>
	<key>inputFormat</key>
	<string>xml</string>
	<key>keyEquivalent</key>
	<string>~ïœ„</string>
	<key>name</key>
	<string>Documentation for Function Call (tool tip)</string>
	<key>output</key>
	<string>afterSelectedText</string>
	<key>scope</key>
	<string>source.virtuoso</string>
	<key>uuid</key>
	<string>19A164B7-4A3C-421B-9866-85FB9077A983</string>
</dict>
</plist>
